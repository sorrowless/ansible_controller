#!/usr/bin/env -S ansible-playbook -e @vars/extra.yaml
#
# Playbook to install and run syslog-ng server and clients for it. Also this
# role installs elasticsearch to syslog-ng server to allow syslog write into
# it. Run it by
#
# > ./run-syslog.yml
#
---
- name: Ensure CA
  import_playbook: services/run-ca.yml
  tags:
    - ca

- name: Client | Create client csr
  hosts: [syslog_server, syslog_client]
  become: yes
  tasks:
    - name: "Client | Install python requirements"
      apt:
        name: python3-pip

    - name: "Client | Install openssl requirements"
      pip:
        name: cryptography>=1.3

    - name: "Ensure syslog is installed"
      become: yes
      apt:
        name: syslog-ng

    - name: "Client | Ensure csr dir"
      file:
        path: "{{ item }}"
        mode: 0755
        owner: root
        group: root
        state: directory
      with_items:
        - "{{ syslog_cert_dir }}"
        - "{{ syslog_key_dir }}"

    - name: "Client | Create private key"
      openssl_privatekey:
        backup: yes
        mode: 0640
        owner: root
        group: "{{ syslog_key_group_owner | default('root') }}"
        path: "{{ syslog_key_dir }}/{{ syslog_ip_address }}.pem"

    - name: Client | Create csr
      openssl_csr:
        path: "{{ syslog_cert_dir }}/{{ syslog_ip_address }}.csr"
        privatekey_path: "{{ syslog_key_dir }}/{{ syslog_ip_address }}.pem"
        common_name: "{{ syslog_ip_address }}"
        country_name: "{{ ca.country }}"
        organization_name: "{{ ca.org }}"
        organizational_unit_name: "{{ ca.ou }}"
        email_address: "{{ ca.email }}"

    - name: Client | Fetch csr
      fetch:
        src: "{{ syslog_cert_dir }}/{{ syslog_ip_address }}.csr"
        dest: "{{ local_ca_cert_dir }}/csr/"
        flat: yes

- name: Sign clients csr's
  hosts: ca
  become: yes

  tasks:
    - name: Copy csrs from Ansible to CA host
      copy:
        src: "{{ local_ca_cert_dir }}/csr/"
        mode: 0640
        dest: "{{ csr_dir }}/"

    - name: Find csrs
      command:
        cmd: "ls {{ ca_dir }}/csr/"
      register: csr_dir_listing
      changed_when: false

    - name: Sign csrs
      openssl_certificate:
        path: "{{ certs_dir }}/{{ item }}.crt"
        provider: ownca
        ownca_path: "{{ ca_cert }}"
        ownca_privatekey_path: "{{ ca_key }}"
        ownca_privatekey_passphrase: "{{ ca_privatekey_password }}"
        csr_path: "{{ csr_dir }}/{{ item }}"
        mode: 0666
        owner: root
      with_items: "{{ csr_dir_listing.stdout_lines }}"

    - name: Fetch certs
      fetch:
        src: "{{ certs_dir }}/{{ item }}.crt"
        dest: "{{ local_ca_cert_dir }}/certs/{{ item }}.crt"
        flat: yes
      with_items: "{{ csr_dir_listing.stdout_lines }}"
      changed_when: false

- name: Distribute certs
  hosts: [syslog_server, syslog_client]
  become: yes
  tasks:
    - name: Deliver crt
      copy:
        src: "{{ local_ca_cert_dir }}/certs/{{ syslog_ip_address }}.csr.crt"
        dest: "{{ syslog_cert_dir }}/{{ syslog_ip_address }}.pem"
        mode: 0640

- name: Ensure syslog servers and clients
  become: yes
  hosts: [syslog_server, syslog_client]

  pre_tasks:
    - name: Update apt cache.
      apt: update_cache=true cache_valid_time=600
      changed_when: false
      when: ansible_os_family == 'Debian'

  roles:
    - { role: sorrowless.syslog, tags: ['syslog'] }

- name: Revoke certs
  hosts: ca
  become: yes
  vars:
    hosts_to_revoke: []
  tasks:
    - name: Revoke "{{ item }}"
      shell: openssl ca -config openssl.cnf -passin pass:{{ ca_privatekey_password }} -revoke certs/"{{ item }}.csr.crt" || true
      args:
        chdir: "{{ ca_dir }}"
      with_items: "{{ hosts_to_revoke }}"
      tags:
        - revoke
        - never

    - name: Update syslog.crl.pem
      shell: openssl ca -gencrl -passin pass:{{ ca_privatekey_password }} -out crl/syslog.crl.pem -config openssl.cnf
      args:
        chdir: "{{ ca_dir }}"
      tags:
        - revoke
        - never

    - name: Fetch updated CRL
      fetch:
        flat: yes
        src: "{{ ca_dir }}/crl/syslog.crl.pem"
        dest: "{{ ansible_transfer_dir }}"
      tags:
        - revoke
        - never

- name: Update CRL on syslog-server
  hosts: syslog_server
  become: yes
  tasks:
    - name: Register CA cert hash
      shell: openssl x509 -noout -hash -in ./cacert.pem
      register: cacert_hash
      args:
        chdir: "{{ ca_dir }}"
      tags:
        - revoke
        - never

    - name: Update CRL on syslog-server
      copy:
        src: "{{ ansible_transfer_dir }}/syslog.crl.pem"
        dest: "/etc/syslog-ng/crl/{{ cacert_hash.stdout }}.r0"
      tags:
        - revoke
        - never

    - name: Restart syslog-ng
      service:
        name: syslog-ng
        state: restarted
      tags:
        - revoke
        - never

