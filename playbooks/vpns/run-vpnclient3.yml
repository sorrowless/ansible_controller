#!/usr/bin/env ansible-playbook
#
# playbook to auto configure vpn clients
#
#
# required variable ovpn_file_path
# this variable is path to ovpn file which will be used
#

---
- name: Setup openvpn3-client
  hosts: openvpn3_clients
  become: true
  become_user: root

  tasks:
    - name: Get openvpn repo key
      apt_key:
        url: https://swupdate.openvpn.net/repos/openvpn-repo-pkg-key.pub
        state: present

    - name: Get openvpn sources list
      get_url:
        url: https://swupdate.openvpn.net/community/openvpn3/repos/openvpn3-focal.list
        dest: /etc/apt/sources.list.d/openvpn3.list

    - name: Install openvpn3 and required packages
      apt:
        state: present
        name: "{{ item }}"
        update_cache: yes
      loop:
         - apt-transport-https 
         - openvpn3

    - name: Set openvpn resolver to resolv.conf
      lineinfile:
        path: /usr/share/dbus-1/system-services/net.openvpn.v3.netcfg.service
        regexp: 'Exec='
        line: 'Exec=/usr/lib/x86_64-linux-gnu/openvpn3-linux/openvpn3-service-netcfg --resolv-conf /etc/resolv.conf --state-dir "/var/lib/openvpn3"'

    - name: Send openvpn autoload config
      copy:
        dest: /etc/openvpn3/autoload/vpnclient.autoload
        owner: root
        group: root
        mode: "600"
        content: |
          {
             "autostart": true,
             "name": "vpnclient"
          }

    - name: Send openvpn ovpn config
      copy:
        src: "{{ ovpn_file_path }}"
        dest: /etc/openvpn3/autoload/vpnclient.ovpn
        owner: root
        group: root
        mode: "600"

    - name: Collect old sessions
      shell: openvpn3 sessions-list | grep Path | awk {'print $2'}
      register: old_sessions 

    - name: Ensure openvpn3-autoload service is enabled and started
      systemd:
        name: openvpn3-autoload.service
        enabled: true
        state: restarted

    - name: Disconnect from old sessions
      shell: 'openvpn3 session-manage --path={{ item }} --disconnect'
      loop: '{{ old_sessions.stdout_lines }}'

    - name: Fail when session is not started
      shell: openvpn3 sessions-list
      register: sessions
      failed_when: sessions.stdout == "No sessions available"

