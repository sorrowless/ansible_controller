#!/usr/bin/env -S ansible-playbook -e @vars/extra.yaml
#
---
# Common part
#
- name: Install HAProxy to ensure reverse proxy to exporters
  hosts: [monitoring_clients, monitoring_servers]
  become: yes
  roles:
    - { role: sorrowless.iptables, tags: ["common", "iptables", "server"] }
    - { role: sorrowless.docker, tags: ["common", "docker", "server"] }
    - { role: sorrowless.tls, tags: ["common", "tls"] }
    - { role: sorrowless.haproxy, tags: ["common", "haproxy"] }

# Server part
#

- name: Install and configure VictoriaMetrics hosts
  hosts: monitoring_servers
  become: yes
  roles:
    - { role: sorrowless.vmstorage, tags: ["server", "vm", "vmstorage"] }
    - { role: sorrowless.vminsert, tags: ["server", "vm", "vminsert"] }
    - { role: sorrowless.vmselect, tags: ["server", "vm", "vmselect"] }
    - { role: sorrowless.vmagent, tags: ["server", "vm", "vmagent"] }
    - { role: sorrowless.vmalert, tags: ["server", "vm", "vmalert"] }
    - { role: sorrowless.prometheus_alertmanager, tags: ["server", "vm", "alerts"] }
    - { role: sorrowless.grafana, tags: ["server", "grafana"] }
    - { role: sorrowless.nginx, tags: ["server", "nginx"] }

# Clients part
#

- name: Install blackbox exporters
  hosts: prometheus_blackbox_exporters
  become: yes
  roles:
    - { role: sorrowless.prometheus_blackbox_exporter, tags: ["exporters", "blackbox_exporter"] }

- name: Install domain exporters
  hosts: prometheus_domain_exporters
  become: yes
  roles:
    - { role: sorrowless.prometheus_domain_exporter, tags: ["exporters", "domain_exporter"] }

- name: Install grok exporters
  hosts: prometheus_grok_exporters
  become: yes
  roles:
    - { role: sorrowless.prometheus_grok_exporter, tags: ["exporters", "grok_exporter"] }

- name: Install mysqld exporters
  hosts: prometheus_mysqld_exporters
  become: yes
  roles:
    - { role: sorrowless.prometheus_mysqld_exporter, tags: ["exporters", "mysqld_exporter"] }

- name: Install node exporters
  hosts: prometheus_node_exporters
  become: yes
  roles:
    - { role: sorrowless.prometheus_node_exporter, tags: ["exporters", "node_exporter"] }

- name: Install postgres exporters
  hosts: prometheus_postgres_exporters
  become: yes
  roles:
    - { role: sorrowless.prometheus_postgres_exporter, tags: ["exporters", "postgres_exporter"] }

- name: Install scripts exporters
  hosts: prometheus_scripts_exporters
  become: yes
  roles:
    - { role: sorrowless.prometheus_scripts_exporter, tags: ["exporters", "scripts_exporter"] }

- name: Install statsd exporters
  hosts: prometheus_statsd_exporters
  become: yes
  roles:
    - { role: sorrowless.prometheus_statsd_exporter, tags: ["exporters", "statsd_exporter"] }

- name: Install cadvisor exporters
  hosts: prometheus_cadvisor_exporters
  become: yes
  roles:
    - { role: sorrowless.cadvisor, when: cadvisor_install is defined, tags: ["exporters", "cadvisor_exporter", "cadvisor"] }

- name: Install docker-exporter
  hosts: prometheus_cadvisor_exporters
  become: yes
  become_user: root
  tasks:
    - name: Stop docker cadvisor container
      docker_compose:
        state: absent
        project_name: cadvisor
        definition:
          version: '2'
          services:
            cadvisor:
              image: "gcr.io/cadvisor/cadvisor:v0.40.0"
              container_name: "cadvisor_exporter"
      tags:
        - exporters
        - docker_exporter
      when: cadvisor_install is undefined

    - name: Start docker-exporter container
      docker_compose:
        state: present
        project_name: docker-exporter
        definition:
          version: '2'
          services:
            cadvisor:
              image: "ageres210784/docker-exporter:{{ docker_exporter_version | default('v0.0.2') }}"
              container_name: docker_exporter
              ports:
                - "{{ docker_exporter_host_port | default('127.0.0.1:9080') }}:8000"
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock:ro
              restart: always
          networks:
            default:
              external:
                name: "{{ docker_exporter_network_name | default('prom_network')}}"
      tags:
        - exporters
        - docker_exporter
      when: cadvisor_install is undefined

- name: configure ssl exporters
  hosts: ssl_exporters
  become: yes
  roles:
    - { role: mikecher.ansible_prometheus_ssl_exporter, tags: ["exporters", "ssl_exporter"]}

- name: Install ipmi exporters
  hosts: prometheus_ipmi_exporters
  become: yes
  roles:
    - { role: andrewgodgivens.ansible_prometheus_ipmi_exporter, tags: ["ipmi_exporter"]}

- name: Install smartctl exporters
  hosts: prometheus_smartctl_exporters
  become: yes
  roles:
    - { role: andrewgodgivens.prometheus_smartctl_exporter, tags: ["smartctl_exporter"]}
